# Turkish AI Agent - Production Docker Image
# GPU-enabled container with CUDA 11.8 support

FROM nvidia/cuda:11.8-devel-ubuntu20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV CUDA_VISIBLE_DEVICES=0

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.9 \
    python3.9-dev \
    python3-pip \
    python3.9-venv \
    git \
    curl \
    wget \
    build-essential \
    libssl-dev \
    libffi-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgtk-3-dev \
    libatlas-base-dev \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    libhdf5-dev \
    libhdf5-serial-dev \
    libhdf5-103 \
    libqtgui4 \
    libqtwebkit4 \
    libqt4-test \
    python3-pyqt5 \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    libgstreamer-plugins-bad1.0-0 \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gstreamer1.0-x \
    gstreamer1.0-alsa \
    gstreamer1.0-gl \
    gstreamer1.0-gtk3 \
    gstreamer1.0-qt5 \
    gstreamer1.0-pulseaudio \
    libgirepository1.0-dev \
    libcairo2-dev \
    pkg-config \
    python3-dev \
    python3-gi \
    python3-gi-cairo \
    gir1.2-gtk-3.0 \
    libgirepository1.0-dev \
    libcairo2-dev \
    pkg-config \
    python3-dev \
    python3-gi \
    python3-gi-cairo \
    gir1.2-gtk-3.0 \
    && rm -rf /var/lib/apt/lists/*

# Create Python virtual environment
RUN python3.9 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip and install Python dependencies
RUN pip install --upgrade pip setuptools wheel

# Install PyTorch with CUDA support
RUN pip install torch==2.0.1+cu118 torchvision==0.15.2+cu118 torchaudio==2.0.2+cu118 --index-url https://download.pytorch.org/whl/cu118

# Install core ML dependencies
RUN pip install \
    transformers==4.35.0 \
    accelerate==0.24.1 \
    bitsandbytes==0.41.1 \
    peft==0.6.0 \
    datasets==2.14.5 \
    scikit-learn==1.3.2 \
    numpy==1.24.3 \
    pandas==2.1.3 \
    matplotlib==3.7.2 \
    seaborn==0.12.2

# Install audio processing dependencies
RUN pip install \
    whisper==1.1.10 \
    pyaudio==0.2.11 \
    librosa==0.10.1 \
    soundfile==0.12.1 \
    webrtcvad==2.0.10

# Install web framework and utilities
RUN pip install \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    websockets==12.0 \
    aiohttp==3.9.1 \
    aiofiles==23.2.1 \
    python-multipart==0.0.6 \
    pydantic==2.5.0

# Install monitoring and logging
RUN pip install \
    prometheus-client==0.19.0 \
    structlog==23.2.0 \
    python-json-logger==2.0.7 \
    psutil==5.9.6 \
    GPUtil==1.4.0

# Install development and testing tools
RUN pip install \
    pytest==7.4.3 \
    pytest-asyncio==0.21.1 \
    pytest-cov==4.1.0 \
    black==23.11.0 \
    flake8==6.1.0 \
    mypy==1.7.1

# Install additional utilities
RUN pip install \
    pyyaml==6.0.1 \
    python-dotenv==1.0.0 \
    tqdm==4.66.1 \
    wandb==0.16.1 \
    tensorboard==2.15.0

# Copy application code
COPY services/ /app/services/
COPY configs/ /app/configs/
COPY adapters/ /app/adapters/
COPY models/ /app/models/
COPY scripts/ /app/scripts/

# Copy requirements and configuration files
COPY requirements_benchmark.txt /app/requirements.txt
COPY configs/model_config.json /app/configs/

# Create necessary directories
RUN mkdir -p /app/logs /app/audio /app/temp /app/benchmark_results

# Set permissions
RUN chmod +x /app/scripts/*.py

# Create non-root user for security
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Expose ports
EXPOSE 8000 8765

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command
CMD ["python3", "-m", "uvicorn", "services.inference_service:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
